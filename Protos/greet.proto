syntax = "proto3";

option csharp_namespace = "MedicalService";

package greet;

// The greeting service definition.
service Greeter {
  
  // Gets cumulative total vaccine doses per country
  rpc GetVaccinesData(VaccinesDataRequest) returns (stream VaccinesDataReply);

  // Gets vaccine metadata per country
  rpc GetVaccinesMetadata(VaccinesMetadataRequest) returns (stream VaccinesMetadataReply);
}

// The request message containing filter for vaccine metadata
message VaccinesMetadataRequest {
  MetadataFilter filter = 1;
}

// The response message containing vaccine metadata per country
message VaccinesMetadataReply {
  string iso3 = 1;
  string vaccineName = 2;
  string productName = 3;
  string companyName = 4;
  string firstVaccineDate = 5;
  string authorizationDate = 6;
  string startDate = 7;
  string endDate = 8;
  string comment = 9;
  string dataSource = 10;
}

// Vaccination metadata filtering parameters
message MetadataFilter {
  string iso3 = 1;
  string vaccineName = 2;
  string companyName = 3;
  string authorizationDate = 4;
}

// The request message containing filter for vaccine data
message VaccinesDataRequest {
  DataFilter filter = 1;
}

// The response message containing vaccine data per country
message VaccinesDataReply {
  string country = 1;
  string iso3 = 2;
  string region = 3;
  string dataSource = 4;
  string dateUpdated = 5;
  double totalVaccinations = 6;
  double onePlusDose = 7;
  double totalVaccinationsPerHundred = 8;
  double onePlusDosePerHundred = 9;
  double personsLastDose = 10;
  double lastDosePerHundred = 11;
  string vaccinesUsed = 12;
  string firstVaccineDate = 13;
  double vaccinesTypesUsed = 14;
  double personsBoosterDose = 15;
  double personsBoosterDosePerHundred = 16;
}

// Vaccination data filtering parameters 
message DataFilter {
  string country = 1;
  string dataSource = 2;
  double totalVaccinations = 3;
  double totalVaccinationsPerHundred = 4;
}